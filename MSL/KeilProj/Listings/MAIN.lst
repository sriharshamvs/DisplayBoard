C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\MAIN.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\MAIN.C LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\MAIN.lst) TABS(2) OBJECT(.\Objects\MAIN.obj)

line level    source

   1          #include <82Gxx.h>
   2          #include <string.h>
   3          #include ".\include\H_16_Eng.h"
   4          //#include ".\include\H_16_Eng.h"
   5          
   6          #define MAX 60
   7          #define CHAR 350
   8          #define NOCHAR 600
   9          #define DELAY 500
  10          #define ANI 5
  11          
  12          #define RXBUFFSIZE  160
  13          
  14          xdata unsigned char Buff1[1600] _at_ 0x0000; 
  15          xdata unsigned char Buff2[1600]; 
  16          xdata unsigned char Buff3[1600];
  17          xdata unsigned char dport[1600] _at_ 0x8000;
  18          xdata unsigned char Zero[1];
  19          
  20          unsigned char temp_char=0;
  21          unsigned char RECIEVEbuffer[RXBUFFSIZE+1];
  22          static unsigned char rxBytes=0;
  23          bit rxReadyFlag = 0;
  24          
  25          unsigned int Offset=0,Check=0,Glob=0;
  26          unsigned int Check1=0;
  27          unsigned char row,Count=0,Ext1=0,Ext2=0;
  28          unsigned int Get1=0, Get2=0;
  29          bit DInt=1;
  30          
  31          const unsigned char Mess1[] = {"WELCOME"};
  32          const unsigned char Mess2[] = {" WELCOMES YOU"}; //English
  33          
  34          
  35          void LeftToRight(void); // right to left
  36          void Display1(void); // still
  37          void Display2(void); // rolling top to bottom & bottom to top
  38          void Delay(unsigned int);
  39          void ECharLoad(unsigned char);
  40          void TCharLoad(unsigned char);
  41          void Blank0(void);
  42          void Blank1();
  43          void AddBlank(void);
  44          void Start(void);
  45          void ProcessData(void);
  46          void Center(void);
  47          unsigned char GetEffect(void);
  48          void Load(void);
  49          void InitilizeSerial(void);
  50          unsigned char Getch(void);
  51          //interrupt void SerialInt(void);
  52          
  53          void TIMER_INIT(void);
  54          void SERIAL_INIT(void);
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 2   

  55          void SERIAL_TRANSMIT(unsigned char tx_char);
  56          void SERIAL_STRING_TX(unsigned char *tx_String);
  57          void SERIAL_STRING_TX_LN(unsigned char *tx_String);
  58          void ValidateSerialData(void);
  59          
  60          void main (void){
  61   1        TIMER_INIT();
  62   1        SERIAL_INIT();
  63   1        Delay(1);
  64   1        //SERIAL_STRING_TX_LN(Mess1);
  65   1        DInt = 1;
  66   1        Start();
  67   1        while(1){
  68   2          ValidateSerialData();
  69   2          ProcessData();
  70   2          Glob=0;
  71   2        }
  72   1      }
  73          
  74          /*void main(void)
  75          {
  76              Blank0();
  77              InitilizeSerial();
  78              EA=1;
  79                  if(Buff1[0] != '0')
  80                          Start();
  81                  
  82              Delay(250);
  83          
  84              for(;;)
  85              {
  86                 DInt = 1;
  87                 ProcessData();
  88                
  89                SBUF = '1';
  90              }
  91          } */
  92          
  93          
  94          void Start(void){
  95   1        unsigned int i=0,j=0;
  96   1        
  97   1        //Mess1
  98   1        /*Buff1[j++] = '0';
  99   1        Buff1[j++] = '1';
 100   1        Buff1[j++] = '~';
 101   1        Buff1[j++] = 'e';
 102   1        */
 103   1        Buff1[0] = '\0';
 104   1        i=0;
 105   1        Buff1[j++] = '~';
 106   1        while(Mess1[i] != 0)
 107   1          Buff1[j++] = Mess1[i++];
 108   1      
 109   1        Buff1[j++] = '^';
 110   1        //End
 111   1        Buff1[j++] = '\0';
 112   1      }
 113          
 114          void ProcessData(void){
 115   1        unsigned char j;
 116   1        Glob=0;
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 3   

 117   1        while((Buff1[Glob] != 0) && (DInt)){
 118   2          switch(GetEffect()){
 119   3            case 0: //Right To Left
 120   3            {
 121   4              Top0:
 122   4              Offset=0;
 123   4              AddBlank();
 124   4              Offset = MAX;
 125   4              Check1 = (10000-(2*MAX)-40);
 126   4              Load();
 127   4              AddBlank();
 128   4              Check=0;
 129   4              while(Check < Offset){
 130   5                LeftToRight();
 131   5                Check++;
 132   5              } 
 133   4              if(Check1 == 1)
 134   4                goto Top0;
 135   4              break;
 136   4            }
 137   3            case 1: //Still
 138   3            {
 139   4              Top1:
 140   4              Offset=0;
 141   4              AddBlank();
 142   4              Offset = MAX;
 143   4              Check1 = (2*MAX);
 144   4              Load();
 145   4              AddBlank();
 146   4              Center();
 147   4              for(j=0;j<=DELAY;j++)
 148   4                Display1();
 149   4              if(Check1 == 1)
 150   4                goto Top1;
 151   4              break;
 152   4            }
 153   3            case 2: //RollDown
 154   3            { 
 155   4              Top2:
 156   4              Offset=0;
 157   4              AddBlank();
 158   4              Offset = MAX;
 159   4              Check1 = (2*MAX);
 160   4              Load();
 161   4              AddBlank();
 162   4              Center();
 163   4              Ext1=0x00;Ext2=0x00;
 164   4              for(j=0;j<=ANI;j++)
 165   4                Display2();
 166   4              Ext1 = 0x01;
 167   4              for(j=0;j<=ANI;j++)
 168   4                Display2();
 169   4              Ext1 = 0x03;
 170   4              for(j=0;j<=ANI;j++)
 171   4                Display2();
 172   4              Ext1 = 0x07;
 173   4              for(j=0;j<=ANI;j++)
 174   4                Display2();
 175   4              Ext1 = 0x0F;
 176   4              for(j=0;j<=ANI;j++)
 177   4                Display2();
 178   4              Ext1 = 0x1F;
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 4   

 179   4              for(j=0;j<=ANI;j++)
 180   4                Display2();
 181   4              Ext1 = 0x3F;
 182   4              for(j=0;j<=ANI;j++)
 183   4                Display2();
 184   4              Ext1 = 0x7F;
 185   4              for(j=0;j<=ANI;j++)
 186   4                Display2();
 187   4              Ext1 = 0xFF;
 188   4              for(j=0;j<=ANI;j++)
 189   4                Display2();
 190   4              Ext2 = 0x01;
 191   4              for(j=0;j<=ANI;j++)
 192   4                Display2();
 193   4              Ext2 = 0x03;
 194   4              for(j=0;j<=ANI;j++)
 195   4                Display2();
 196   4              Ext2 = 0x07;
 197   4              for(j=0;j<=ANI;j++)
 198   4                Display2();
 199   4              Ext2 = 0x0F;
 200   4              for(j=0;j<=ANI;j++)
 201   4                Display2();
 202   4              Ext2 = 0x1F;
 203   4              for(j=0;j<=ANI;j++)
 204   4                Display2();
 205   4              Ext2 = 0x3F;
 206   4              for(j=0;j<=ANI;j++)
 207   4                Display2();
 208   4              Ext2 = 0x7F;
 209   4              for(j=0;j<=ANI;j++)
 210   4                Display2();
 211   4              Ext2 = 0xFF;
 212   4              for(j=0;j<=ANI;j++)
 213   4                Display2();
 214   4              for(j=0;j<=DELAY;j++)
 215   4                Display2();
 216   4              if(Check1 == 1)
 217   4                goto Top2;
 218   4              break;
 219   4            }
 220   3            case 3: //RollTop
 221   3            {
 222   4            Top3:
 223   4              Offset=0;
 224   4              AddBlank();
 225   4              Offset=MAX;
 226   4              Check1=(2*MAX);
 227   4              Load();
 228   4              AddBlank();
 229   4              Center();
 230   4              Ext1=0x00;Ext2=0x00;
 231   4              for(j=0;j<=ANI;j++)
 232   4                Display2();
 233   4              Ext2 = 0x80;
 234   4              for(j=0;j<=ANI;j++)
 235   4                Display2();
 236   4              Ext2 = 0xC0;
 237   4              for(j=0;j<=ANI;j++)
 238   4                Display2();
 239   4              Ext2 = 0xE0;
 240   4              for(j=0;j<=ANI;j++)
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 5   

 241   4                Display2();
 242   4              Ext2 = 0xF0;
 243   4              for(j=0;j<=ANI;j++)
 244   4                Display2();
 245   4              Ext2 = 0xF8;
 246   4              for(j=0;j<=ANI;j++)
 247   4                Display2();
 248   4              Ext2 = 0xFC;
 249   4              for(j=0;j<=ANI;j++)
 250   4                Display2();
 251   4              Ext2 = 0xFE;
 252   4              for(j=0;j<=ANI;j++)
 253   4                Display2();
 254   4              Ext2 = 0xFF;
 255   4              for(j=0;j<=ANI;j++)
 256   4                Display2();
 257   4              Ext1 = 0x80;
 258   4              for(j=0;j<=ANI;j++)
 259   4                Display2();
 260   4              Ext1 = 0xC0;
 261   4              for(j=0;j<=ANI;j++)
 262   4                Display2();
 263   4              Ext1 = 0xE0;
 264   4              for(j=0;j<=ANI;j++)
 265   4                Display2();
 266   4              Ext1 = 0xF0;
 267   4              for(j=0;j<=ANI;j++)
 268   4                Display2();
 269   4              Ext1 = 0xF8;
 270   4              for(j=0;j<=ANI;j++)
 271   4                Display2();
 272   4              Ext1 = 0xFC;
 273   4              for(j=0;j<=ANI;j++)
 274   4                Display2();
 275   4              Ext1 = 0xFE;
 276   4              for(j=0;j<=ANI;j++)
 277   4                Display2();
 278   4              Ext1 = 0xFF;
 279   4              for(j=0;j<=ANI;j++)
 280   4                Display2();
 281   4              for(j=0;j<=DELAY;j++)
 282   4                Display2();
 283   4              if(Check1 == 1)
 284   4                goto Top3;
 285   4              break;
 286   4            }
 287   3          }
 288   2        Glob++;
 289   2        }
 290   1      }
 291          
 292          unsigned char GetEffect(void){
 293   1        unsigned char returnValue = 0;
 294   1        if((Buff1[Glob++] == '0') && (Buff1[Glob++] == '0')) //Right To Left
 295   1          returnValue = 0;
 296   1        //return(0); 
 297   1        //Glob-=2;     
 298   1        else if((Buff1[Glob++] == '0') && (Buff1[Glob++] == '1')) //Still
 299   1          returnValue = 1;
 300   1        //return(1);
 301   1        //Glob-=2;      
 302   1        else if((Buff1[Glob++] == '0') && (Buff1[Glob++] == '2')) //Roll Down
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 6   

 303   1          returnValue = 2;
 304   1          //return(2); 
 305   1        //Glob-=2;   
 306   1        else if ((Buff1[Glob++] == '0') && (Buff1[Glob++] == '3')) //Roll Top
 307   1          returnValue = 3;
 308   1        
 309   1          //return(3);
 310   1        //Glob-=2;  
 311   1        //return returnValue;
 312   1        return 0;
 313   1      }
 314          
 315          void Load(void){
 316   1        //unsigned char Lang=0,i,n,ch;
 317   1        unsigned int i=0;
 318   1        unsigned char Lang=0;
 319   1        Glob=0; 
 320   1        while((Buff1[Glob] != '^') && (DInt)){
 321   2          rxReadyFlag = 0;
 322   2          /*if(Buff1[Glob] == '~'){
 323   2            Glob++;
 324   2            if(Buff1[Glob] == 'e'){
 325   2              Lang=0;
 326   2            }
 327   2          }*/
 328   2          //else{
 329   2          //Glob++;
 330   2              ECharLoad(Buff1[Glob]);
 331   2            if(Offset > Check1){
 332   3              Check1 = 1;
 333   3              Offset -= Count;
 334   3              AddBlank();
 335   3            }
 336   2          //}
 337   2        Glob++;
 338   2       }
 339   1      }
 340          
 341          void Center(void){
 342   1        unsigned int i;
 343   1        i = (Offset - MAX);
 344   1        if(i <= MAX){
 345   2          Check = (MAX - ((MAX-i)/2));
 346   2        }
 347   1        else  Check = MAX;
 348   1      }
 349          
 350          /*void SerialInt (void) interrupt 4{
 351            unsigned int i=0;
 352            unsigned char Ch;
 353            EA=0;
 354            //SET_VECTOR(SINT,SerialInt);
 355            Start();
 356            Ch = Getch();
 357            if(Ch == '~'){
 358              EA=1;
 359              Ch=Getch();
 360              while((Ch != '^') && (i < (NOCHAR-1))){
 361                Buff1[i++] = Ch;
 362                EA=1;
 363                Ch=Getch();
 364                if(Ch == 1)
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 7   

 365                  break;
 366              }
 367              Buff1[i]=0;
 368              DInt=0;
 369              if((Ch == 1) || (Buff1[0] != '0') || (i == (NOCHAR-1))){
 370                EA=0;
 371                //Start();
 372                EA=1;
 373              }
 374            }
 375            EA=1;
 376          }
 377          
 378          unsigned char Getch(void){
 379            Get1=0;
 380            Get2=0;
 381            while((!RI) && (Get2 < 2)){
 382              Get1++;
 383              if(Get1 >= 60000){
 384                Get1 = 0;
 385                Get2++;
 386              }
 387            }
 388            RI = 0;
 389            if(Get2 >= 2)
 390              return 1;       
 391            else
 392              return SBUF;
 393          }
 394          */
 395          
 396          void ECharLoad(unsigned char n){
 397   1        unsigned char i,j=1;
 398   1        if((n >= ' ') && (n <= '}')){
 399   2          n -= ' ';
 400   2          Count = H_16_Eng[n][0];
 401   2          for(i=0;i<Count;i++){
 402   3            Buff2[Offset+i] = H_16_Eng[n][j];
 403   3            Buff3[Offset+i] = H_16_Eng[n][j+1];
 404   3            j+=2;
 405   3          }
 406   2          Offset += Count;
 407   2          for(i=0;i<2;i++){
 408   3            Buff2[Offset+i] = 0;
 409   3            Buff3[Offset+i] = 0;
 410   3          }
 411   2          Offset += 2;
 412   2        }
 413   1        //SERIAL_STRING_TX_LN("Exectued ECharLoad");
 414   1      }
 415          
 416          void AddBlank(void){
 417   1          unsigned int i=0;
 418   1          for(i=0;i<MAX;i++){ 
 419   2              Buff2[Offset+i] = 0x00;
 420   2              Buff3[Offset+i] = 0x00;
 421   2          }
 422   1      }
 423          
 424          void LeftToRight(void){
 425   1        unsigned char i;
 426   1        for(row=0;((row<=9) && (DInt));row++){          
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 8   

 427   2          for(i=0;i<7;i++){
 428   3            //Borad 1 - 8000
 429   3            dport[0] = row;
 430   3            dport[1] = Buff2[row+Check];
 431   3            dport[2] = Buff3[row+Check];
 432   3            dport[3] = Buff2[9+row+Check];
 433   3            dport[4] = Buff3[9+row+Check];
 434   3      
 435   3            //Borad 2 - 8010
 436   3            dport[16] = row;
 437   3            dport[17] = Buff2[18+row+Check];
 438   3            dport[18] = Buff3[18+row+Check];
 439   3            dport[19] = Buff2[27+row+Check];
 440   3            dport[20] = Buff3[27+row+Check];
 441   3      
 442   3            //Borad 3 - 8020
 443   3            dport[32] = row;
 444   3            dport[33] = Buff2[36+row+Check];
 445   3            dport[34] = Buff3[36+row+Check];
 446   3            dport[35] = Buff2[45+row+Check];
 447   3            dport[36] = Buff3[45+row+Check];
 448   3      
 449   3          }
 450   2        Blank0();
 451   2        }
 452   1      }
 453          
 454          void Display1(void){
 455   1        for(row=0;((row<=9) && (DInt));row++){
 456   2          //Borad 1 - 8000
 457   2          dport[0] = row;
 458   2          dport[1] = Buff2[row+Check];
 459   2          dport[2] = Buff3[row+Check];
 460   2          dport[3] = Buff2[10+row+Check];
 461   2          dport[4] = Buff3[10+row+Check];
 462   2      
 463   2          //Borad 2 - 8010
 464   2          dport[16] = row;
 465   2          dport[17] = Buff2[20+row+Check];
 466   2          dport[18] = Buff3[20+row+Check];
 467   2          dport[19] = Buff2[30+row+Check];
 468   2          dport[20] = Buff3[30+row+Check];
 469   2      
 470   2          //Borad 3 - 8020
 471   2          dport[32] = row;
 472   2          dport[33] = Buff2[40+row+Check];
 473   2          dport[34] = Buff3[40+row+Check];
 474   2          dport[35] = Buff2[50+row+Check];
 475   2          dport[36] = Buff3[50+row+Check];
 476   2      
 477   2          Blank0();
 478   2        }
 479   1      }
 480          
 481          void Display2(void){
 482   1        for(row=0;((row<=9) && (DInt));row++){
 483   2          //Borad 1 - 8000
 484   2          dport[0] = row;
 485   2          dport[1] = Buff2[row+Check] & Ext1;
 486   2          dport[2] = Buff3[row+Check] & Ext2;
 487   2          dport[3] = Buff2[10+row+Check] & Ext1;
 488   2          dport[4] = Buff3[10+row+Check] & Ext2;
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 9   

 489   2      
 490   2          //Borad 2 - 8010
 491   2          dport[16] = row;
 492   2          dport[17] = Buff2[20+row+Check] & Ext1;
 493   2          dport[18] = Buff3[20+row+Check] & Ext2;
 494   2          dport[19] = Buff2[30+row+Check] & Ext1;
 495   2          dport[20] = Buff3[30+row+Check] & Ext2;
 496   2      
 497   2          //Borad 3 - 8020
 498   2          dport[32] = row;
 499   2          dport[33] = Buff2[40+row+Check] & Ext1;
 500   2          dport[34] = Buff3[40+row+Check] & Ext2;
 501   2          dport[35] = Buff2[50+row+Check] & Ext1;
 502   2          dport[36] = Buff3[50+row+Check] & Ext2;
 503   2      
 504   2          Blank1();
 505   2        }
 506   1      }
 507          
 508          void Blank0(void){
 509   1        unsigned char Temp1=0;
 510   1        unsigned int Temp2=0;
 511   1      
 512   1        //Borad 1 - 8000
 513   1            Zero[0] = 0;
 514   1        dport[1] = Zero[0+Temp1+Temp2];
 515   1        dport[2] = Zero[0+Temp1+Temp2];
 516   1        dport[3] = Zero[0+Temp1+Temp2];
 517   1        dport[4] = Zero[0+Temp1+Temp2];
 518   1            
 519   1        //Borad 2 - 8010
 520   1            Zero[0] = 0;
 521   1        dport[17] = Zero[0+Temp1+Temp2];
 522   1        dport[18] = Zero[0+Temp1+Temp2];
 523   1        dport[19] = Zero[0+Temp1+Temp2];
 524   1        dport[20] = Zero[0+Temp1+Temp2];
 525   1      
 526   1        //Borad 3 - 8020
 527   1            Zero[0] = 0;
 528   1        dport[33] = Zero[0+Temp1+Temp2];
 529   1        dport[34] = Zero[0+Temp1+Temp2];
 530   1        dport[35] = Zero[0+Temp1+Temp2];
 531   1        dport[36] = Zero[0+Temp1+Temp2];
 532   1      
 533   1      }
 534          
 535          void Blank1(void){
 536   1        unsigned char Temp1=0;
 537   1        unsigned int Temp2=0;
 538   1      
 539   1        //Borad 1 - 8000
 540   1            Zero[0] = 0;
 541   1        dport[1] = Zero[0+Temp1+Temp2] & Temp1;
 542   1        dport[2] = Zero[0+Temp1+Temp2] & Temp1;
 543   1        dport[3] = Zero[0+Temp1+Temp2] & Temp1;
 544   1        dport[4] = Zero[0+Temp1+Temp2] & Temp1;
 545   1            
 546   1        //Borad 2 - 8010
 547   1            Zero[0] = 0;
 548   1        dport[17] = Zero[0+Temp1+Temp2] & Temp1;
 549   1        dport[18] = Zero[0+Temp1+Temp2] & Temp1;
 550   1        dport[19] = Zero[0+Temp1+Temp2] & Temp1;
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 10  

 551   1        dport[20] = Zero[0+Temp1+Temp2] & Temp1;
 552   1      
 553   1        //Borad 3 - 8020
 554   1            Zero[0] = 0;
 555   1        dport[33] = Zero[0+Temp1+Temp2] & Temp1;
 556   1        dport[34] = Zero[0+Temp1+Temp2] & Temp1;
 557   1        dport[35] = Zero[0+Temp1+Temp2] & Temp1;
 558   1        dport[36] = Zero[0+Temp1+Temp2] & Temp1;
 559   1      
 560   1      }
 561          
 562          void Delay(unsigned int n){
 563   1        unsigned int i;
 564   1        for(i=0;i<=n ;i++);
 565   1      }
 566          
 567          void SERIAL_INIT(void){
 568   1        SCON=0x50;
 569   1        PCON |=0X80;
 570   1        TMOD&=0xCF; 
 571   1        TMOD|=0x20; 
 572   1        TH1=0xFA;   // setting buadrate to 9600 bps
 573   1        TL1=0x00;
 574   1        TR1=1;
 575   1        ES = 1;
 576   1        IE &= 0x90;  
 577   1        SERIAL_STRING_TX_LN("Serial Initialized");
 578   1      } // SERIAL_INIT ends here
 579          
 580          void TIMER_INIT(void){
 581   1        TMOD=0x00;
 582   1        IE=0x00;
 583   1        TR0=0;
 584   1        TF0=0;
 585   1        TMOD|=0x01;
 586   1        IE|=0x82;
 587   1        TH0=0xF8;   // setting 1ms timer
 588   1        TL0=0xCD;
 589   1        TR0=1;
 590   1      } // TIMER_INIT ends here
 591          
 592          void SERIAL_STRING_TX(unsigned char *tx_String){   // For sending a String
 593   1        unsigned int i,stringSize;
 594   1        
 595   1        stringSize = strlen(tx_String); // Calculate the String length
 596   1        for(i=0;i<stringSize;i++){
 597   2          temp_char = tx_String[i];  
 598   2          SERIAL_TRANSMIT(temp_char);  // Send each character to the SERIAL_TRANSMIT function
 599   2        }
 600   1      }
 601          
 602          void SERIAL_TRANSMIT(unsigned char tx_char){  // For sending each character
 603   1        SBUF=tx_char;  //Store the incoming character in SUBF
 604   1        while(TI==0);  // Wait until Tx bit is High
 605   1        TI=0;   // Make it 0 once it's high
 606   1      }
 607          
 608          void SERIAL_STRING_TX_LN(unsigned char *tx_String){   // For sending a String
 609   1        unsigned int i,stringSize;
 610   1        unsigned char temp_char=0;
 611   1        
 612   1        stringSize = strlen(tx_String); // Calculate the String length
C51 COMPILER V9.54   MAIN                                                                  02/15/2019 21:42:24 PAGE 11  

 613   1        for(i=0;i<stringSize;i++){
 614   2          temp_char = tx_String[i];  
 615   2          SERIAL_TRANSMIT(temp_char);  // Send each character to the SERIAL_TRANSMIT function
 616   2        }
 617   1        SERIAL_TRANSMIT('\r');
 618   1        SERIAL_TRANSMIT('\n');
 619   1      }
 620          
 621          void SERIAL_RECIEVE(void) interrupt 4{
 622   1        char value;
 623   1        unsigned int i=0;
 624   1        DInt = 0;
 625   1        if(RI){
 626   2          value = SBUF;
 627   2          RECIEVEbuffer[rxBytes++] = value;
 628   2          if(value == '^'){ 
 629   3            rxReadyFlag=1 ;
 630   3            SBUF = 1;
 631   3          }
 632   2          RI = 0;
 633   2        }
 634   1        if(rxBytes > RXBUFFSIZE)
 635   1          rxBytes = 0;
 636   1      }
 637          
 638          void ValidateSerialData(void){
 639   1        unsigned char i = 0;
 640   1        if(RECIEVEbuffer[0]=='~' && RECIEVEbuffer[rxBytes-1]=='^'){
 641   2          SERIAL_STRING_TX_LN("Jai Sri Ram");
 642   2          for (i=0;i<rxBytes;i++){
 643   3            Buff1[i] = RECIEVEbuffer [i];
 644   3          }
 645   2          rxBytes=0;  
 646   2          DInt = 1;
 647   2        } 
 648   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3770    ----
   CONSTANT SIZE    =     31    ----
   XDATA SIZE       =   6727      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
